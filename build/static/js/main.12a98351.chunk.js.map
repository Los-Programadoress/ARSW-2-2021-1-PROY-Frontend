{"version":3,"sources":["ComponentsGame/constantsGame.js","ComponentsGame/grid/LinesWall/index.js","ComponentsGame/Board/Walls/index.js","ComponentsGame/Board/index.js","ComponentsGame/Tabs/index.js","ComponentsGame/Player/Pacman/index.js","ComponentsGame/Player/paths.js","ComponentsGame/Player/moves.js","ComponentsGame/index.js","index.js"],"names":["componentPosition","position","gridSize","left","top","getLinePart","radiusA","radiusB","path","lastDirection","distance","direction","index","end","vertical","horizontal","reverse","polarity","vectorType","vector","line","base","cornerArcDiffX","cornerArcDiffY","cornerArc","cornerArcRadius","clockwise","diffX","diffY","getCornerArc","LinesWall","start","parts","props","startTransformed","getPoint","partRadius","map","radius","pathString","rest","reduce","lastRadius","length","join","pathProps","strokeWidth","stroke","fill","d","Walls","lineProps","linesWalls","Object","keys","walls","key","className","Board","boardWidth","boardHeight","width","height","x","y","Tab","eaten","big","classNames","style","Tabs","tabs","items","filter","item","pacmanPath","angle","offset","offsetX","Math","cos","offsetY","sin","floor","m00","m01","biteX1","biteY1","biteX2","biteY2","arcFlag","PI","Pacman","state","timerBite","timerLose","startTime","Date","now","this","setState","setInterval","clearInterval","prevProps","lost","marginLeft","marginTop","Component","setPolarity","coord1","coord2","coord3","updatePlayer","time","newVector","player","speed","toNearestCoord3","newPosition","slice","movedVector","movedDistance","abs","nearestOtherCoord3","round","paths","pathHit","findIndex","limits","collision","getNewPosition","nextDirection","changedVector","oldPosition","oldDirection","newDirection","oldCoord3","oldCoord1","pathTo","tolerance","snap","ceil","continueMoving","old0","new0","movedDistanceBeforeTurn","newCoord1","newCoord3","getChangedVector","getNewPlayerVector","eatentabsIndex","getEatentabs","scoreDelta","score","Lacman","handleKeyDown","bind","walkingTime","generateTabs","timers","walking","window","addEventListener","setTimeout","walkingInMap","posX","posY","putRow","startX","num","Array","putSeparateTabsInRow","xPoints","putContinuousTabsInRow","ranges","putCol","startY","isBigTab","event","changeDirection","oldPolarity","newPolarity","removeEventListener","clearTimeout","move","timeSeconds","playerWalking","onEnd","otherProps","animate","process","LacmanApp","ComponentsGame","render","document","getElementById","renderApp"],"mappings":"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","file":"static/js/main.12a98351.chunk.js","sourcesContent":["export const BOARD_WIDTH = 28;\r\nexport const BOARD_HEIGHT = 36;\r\nexport const WALL_COLOUR = '#06f';\r\n\r\nexport const EAST = 0;\r\nexport const NORTH = 1;\r\nexport const WEST = 2;\r\nexport const SOUTH = 3;\r\n\r\nexport const PLAYER_RADIUS = 0.75;\r\n\r\nexport const PLAYER_SPEED = 5;\r\n\r\nexport function componentPosition(position, gridSize) {\r\n    return {\r\n        left: (position[0] + 23.5) * gridSize,\r\n        top: (BOARD_HEIGHT - position[1] - 3) * gridSize\r\n    };\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as constants from '../../constantsGame';\r\n\r\nfunction getCornerArc(cornerArcRadius, clockwise, diffX, diffY) {\r\n    return `a${cornerArcRadius},${cornerArcRadius} 0 0 ${clockwise >> 0} ${diffX},${diffY}`;\r\n}\r\n\r\nconst pmod = (num, base) => ((num % base) + base) % base;\r\n\r\nfunction getLinePart({ radiusA, radiusB, path, lastDirection, distance, direction, index, end }) {\r\n    const vertical = direction % 2;\r\n    const horizontal = 1 - vertical;\r\n\r\n    const reverse = (-1) ** ((direction < 2) >> 0);\r\n    const polarity = (-1) ** vertical;\r\n\r\n    const vectorType = ['h', 'v'][vertical];\r\n\r\n    if (index === 0) {\r\n        const vector = (radiusB - distance) * reverse * polarity;\r\n        const line = `${vectorType}${vector}`;\r\n\r\n        return `${path} ${line}`;\r\n    }\r\n\r\n    const vector = (radiusA + radiusB * (!end >> 0) - distance) * reverse * polarity;\r\n    const line = `${vectorType}${vector}`;\r\n\r\n    const cornerArcDiffX = radiusA * (\r\n        (-1) ** ((lastDirection === constants.WEST) >> 0) * vertical - reverse * horizontal\r\n    );\r\n\r\n    const cornerArcDiffY = radiusA * (\r\n        (-1) ** ((lastDirection === constants.NORTH) >> 0) * horizontal + reverse * vertical\r\n    );\r\n\r\n    const clockwise = (pmod(lastDirection - direction, 4) === 1) >> 0;\r\n\r\n    const cornerArc = getCornerArc(radiusA, clockwise, cornerArcDiffX, cornerArcDiffY);\r\n\r\n    return `${path} ${cornerArc} ${line}`;\r\n}\r\n\r\nfunction getPoint([xValue, yValue], gridSize) {\r\n    return [xValue * gridSize, (constants.BOARD_HEIGHT - yValue) * gridSize];\r\n}\r\n\r\nexport default function LinesWall({ gridSize, start, parts, ...props }) {\r\n    const startTransformed = getPoint(start, gridSize);\r\n\r\n    const partRadius = parts.map(({ radius }) => gridSize / (radius || 3));\r\n\r\n    const { path: pathString } = parts.map(({ distance, ...rest }) => ({\r\n        distance: distance * gridSize,\r\n        ...rest\r\n    }))\r\n        .reduce(({ path, lastDirection, lastRadius }, { distance, direction }, index) => ({\r\n            path: getLinePart({\r\n                radiusA: lastRadius,\r\n                radiusB: partRadius[index],\r\n                path,\r\n                lastDirection,\r\n                distance,\r\n                direction,\r\n                index,\r\n                end: index === parts.length - 1\r\n            }),\r\n            lastDirection: direction,\r\n            lastRadius: partRadius[index]\r\n        }), {\r\n            path: `M${startTransformed.join(',')}`\r\n        });\r\n\r\n    const pathProps = {\r\n        strokeWidth: props.strokeWidth,\r\n        stroke: props.stroke,\r\n        fill: props.fill\r\n    };\r\n\r\n    return (\r\n        <path d={pathString} {...pathProps} />\r\n    );\r\n}\r\n\r\nLinesWall.propTypes = {\r\n    strokeWidth: PropTypes.number,\r\n    stroke: PropTypes.string,\r\n    fill: PropTypes.string,\r\n    gridSize: PropTypes.number.isRequired,\r\n    start: PropTypes.array.isRequired,\r\n    parts: PropTypes.array.isRequired\r\n};\r\n\r\n","import React from 'react';\r\nimport { WALL_COLOUR } from '../../constantsGame';\r\nimport LinesWall from '../../grid/LinesWall/';\r\nimport walls from './walls.json';\r\n\r\nexport default function Walls(props) {\r\n    const lineProps = {\r\n        strokeWidth: 1,\r\n        stroke: WALL_COLOUR,\r\n        fill: 'none'\r\n    };\r\n\r\n    const linesWalls = Object.keys(walls).map(key => {\r\n        const parts = walls[key].parts.map(([distance, direction, radius]) => ({ distance, direction, radius }));\r\n\r\n        return (\r\n            <LinesWall key={key} {...props} {...lineProps}\r\n                start={walls[key].start} parts={parts} />\r\n        );\r\n    });\r\n\r\n    return (\r\n        <g className=\"walls\">\r\n            {linesWalls}\r\n        </g>\r\n    );\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { BOARD_WIDTH, BOARD_HEIGHT } from '../constantsGame';\r\nimport Walls from './Walls';\r\nimport './board.scss';\r\n\r\nexport default function Board(props) {\r\n    const { gridSize } = props;\r\n\r\n    const boardWidth = gridSize * BOARD_WIDTH;\r\n    const boardHeight = gridSize * BOARD_HEIGHT;\r\n\r\n    return (\r\n        <div className=\"lacman-board\">\r\n            <svg width={boardWidth} height={boardHeight}>\r\n                <rect x={0} y={0} width={boardWidth} height={boardHeight} fill=\"#000\" />\r\n                <Walls {...props} />\r\n            </svg>\r\n        </div>\r\n    );\r\n}\r\n\r\nBoard.propTypes = {\r\n    gridSize: PropTypes.number.isRequired\r\n};\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\nimport { componentPosition } from '../constantsGame';\r\nimport './style.scss';\r\n\r\nfunction Tab({gridSize, position, eaten, big }) {\r\n    const className = classNames('tab', { eaten, big });\r\n    const style = componentPosition(position, gridSize);\r\n\r\n    return (\r\n        <span className={className} style={style} />\r\n    );\r\n}\r\n\r\nTab.propTypes = {\r\n    gridSize: PropTypes.number.isRequired,\r\n    position: PropTypes.array.isRequired,\r\n    eaten: PropTypes.bool.isRequired,\r\n    big: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default function Tabs({ tabs, ...props }) {\r\n    const items = tabs.filter(({ eaten }) => !eaten)\r\n        .map(({ key, ...item }) => (\r\n            <Tab key={key} {...item} {...props} />\r\n        ));\r\n\r\n    return (   \r\n        <div className=\"tabs\">\r\n            {items}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabs.propTypes = {\r\n    tabs: PropTypes.array.isRequired\r\n};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { PLAYER_RADIUS, componentPosition } from '../../constantsGame';\r\nimport './style.scss';\r\n\r\nconst ANIMATION_SPEED = 30;\r\n\r\nfunction pacmanPath(radius, angle, offset) {\r\n\r\n    const offsetX = radius * Math.cos(angle / 2);\r\n    const offsetY = radius * Math.sin(angle / 2);\r\n\r\n    const polarity = (-1) ** Math.floor(offset / 2);\r\n\r\n    const m00 = ((offset + 1) % 2) * polarity;\r\n    const m01 = (offset % 2) * polarity;\r\n\r\n    const biteX1 = offsetX * m00 - offsetY * m01;\r\n    const biteY1 = -offsetX * m01 - offsetY * m00;\r\n    const biteX2 = offsetX * m00 + offsetY * m01;\r\n    const biteY2 = -offsetX * m01 + offsetY * m00;\r\n\r\n    const arcFlag = (angle < Math.PI) >> 0;\r\n\r\n    let setCoordinates = [`M${radius},${radius}`,`L${radius + biteX1},${radius + biteY1}`,\r\n        `A${radius},${radius}`,`0 ${arcFlag} 0`,`${radius + biteX2},${radius + biteY2}`,\r\n        `L${radius},${radius}`].join(' ');\r\n        \r\n    return setCoordinates;\r\n}\r\n\r\nexport default class Pacman extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            angle: 1,\r\n            timerBite: null,\r\n            timerLose: null\r\n        };\r\n\r\n        this.startTime = Date.now();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            timerBite: setInterval(() => this.setState({\r\n                angle: 1 + 0.5 * Math.sin((Date.now() - this.startTime) / 70)\r\n            }), ANIMATION_SPEED)\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.state.timerBite);\r\n    }\r\n    \r\n    componentDidUpdate(prevProps) {\r\n        if (!prevProps.lost && this.props.lost) {\r\n            clearInterval(this.state.timerBite);\r\n            this.setState({ angle: 0 });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { gridSize, lost, position, direction } = this.props;\r\n\r\n        const pathProps = {\r\n            stroke: 'none',\r\n            fill: 'yellow'\r\n        };\r\n\r\n        const radius = gridSize * PLAYER_RADIUS;\r\n\r\n        const style = {\r\n            ...componentPosition(position, gridSize),\r\n            width: radius * 2,\r\n            height: radius * 2,\r\n            marginLeft: -radius,\r\n            marginTop: -radius\r\n        };\r\n\r\n        const offset = lost ? 1 : direction;\r\n\r\n        return (\r\n            <svg className=\"pacman-player\" style={style}>\r\n                <path d={pacmanPath(radius, this.state.angle, offset)} {...pathProps} />\r\n            </svg>\r\n        );\r\n    }\r\n}\r\n\r\nPacman.propTypes = {\r\n    animate: PropTypes.bool,\r\n    gridSize: PropTypes.number.isRequired,\r\n    lost: PropTypes.bool.isRequired,\r\n    position: PropTypes.array.isRequired,\r\n    direction: PropTypes.number.isRequired,\r\n    onEnd: PropTypes.func\r\n};","/**\r\n * Esto define los rangos donde el Jugador puede moverse en el tablero. Esta compuesto de un conjunto de posiciones en x y en y.\r\n * El primer elemento (Matriz) corresponde a las filas de posiciones en x -de abajo a arriba- y el segundo en y -de izquierda a derecha-.\r\n * En cada uno el número de elementos corresponde al número de columnas respectivamente.\r\n */\r\n\r\nexport default [\r\n    [\r\n        [[0, 25]],\r\n        [[0, 0], [11, 11], [14, 14], [25, 25]],\r\n        [[0, 0], [11, 11], [14, 14], [25, 25]],\r\n        [[0, 5], [8, 11], [14, 17], [20, 25]],\r\n        [[2, 2], [5, 5], [8, 8], [17, 17], [20, 20], [23, 23]],\r\n        [[2, 2], [5, 5], [8, 8], [17, 17], [20, 20], [23, 23]],\r\n        [[0, 2], [5, 20], [23, 25]],\r\n        [[0, 0], [5, 5], [11, 11], [14, 14], [20, 20], [25, 25]],\r\n        [[0, 0], [5, 5], [11, 11], [14, 14], [20, 20], [25, 25]],\r\n        [[0, 11], [14, 25]],\r\n        [[5, 5], [8, 8], [17, 17], [20, 20]],\r\n        [[5, 5], [8, 8], [17, 17], [20, 20]],\r\n        [[5, 5], [8, 17], [20, 20]],\r\n        [[5, 5], [8, 8], [17, 17], [20, 20]],\r\n        [[5, 5], [8, 8], [17, 17], [20, 20]],\r\n        [[-1, 8, true],[10.5,14.5],[17, 26, true]],\r\n        [[5, 5], [8, 8], [17, 17], [20, 20]],\r\n        [[5, 5], [8, 8], [12,13], [17, 17], [20, 20]],\r\n        [[5, 5], [8, 17], [20, 20]],\r\n        [[5, 5], [11, 11], [14, 14], [20, 20]],\r\n        [[5, 5], [11, 11], [14, 14], [20, 20]],\r\n        [[0, 5], [8, 11], [14, 17], [20, 25]],\r\n        [[0, 0], [5, 5], [8, 8], [17, 17], [20, 20], [25, 25]],\r\n        [[0, 0], [5, 5], [8, 8], [17, 17], [20, 20], [25, 25]],\r\n        [[0, 25]],\r\n        [[0, 0], [5, 5], [11, 11], [14, 14], [20, 20], [25, 25]],\r\n        [[0, 0], [5, 5], [11, 11], [14, 14], [20, 20], [25, 25]],\r\n        [[0, 0], [5, 5], [11, 11], [14, 14], [20, 20], [25, 25]],\r\n        [[0, 11], [14, 25]]\r\n    ],\r\n    [\r\n        [[0, 3], [6, 9], [15, 15], [21, 28]],\r\n        [[0, 0], [3, 3], [6, 6], [9, 9], [15, 15], [21, 21], [24, 24], [28, 28]],\r\n        [[0, 0], [3, 6], [9, 9], [15, 15], [21, 21], [24, 24], [28, 28]],\r\n        [[0, 0], [3, 3], [9, 9], [15, 15], [21, 21], [24, 24], [28, 28]],\r\n        [[0, 0], [3, 3], [9, 9], [15, 15], [21, 21], [24, 24], [28, 28]],\r\n        [[0, 0], [3, 28]],\r\n        [[0, 0], [6, 6], [9, 9], [15, 15], [24, 24], [28, 28]],\r\n        [[0, 0], [6, 6], [9, 9], [15, 15], [24, 24], [28, 28]],\r\n        [[0, 0], [3, 6], [9, 18], [21, 24], [28, 28]],\r\n        [[0, 0], [3, 3], [6, 6], [9, 9], [12, 12], [18, 18], [21, 21], [24, 24], [28, 28]],\r\n        [[0, 0], [3, 3], [6, 6], [9, 9], [12, 12], [15, 15], [18, 18], [21, 21], [24, 24], [28, 28]],\r\n        [[0, 3], [6, 9], [12, 12], [15,15], [18, 21], [24, 28]],\r\n        [[0, 0], [6, 6], [12, 12], [15,18], [24, 24]],\r\n        [[0, 0], [6, 6], [12, 12], [15,18], [24, 24]],\r\n        [[0, 3], [6, 9], [12, 12], [15,15], [18, 21], [24, 28]],\r\n        [[0, 0], [3, 3], [6, 6], [9, 9], [12, 12], [15,15], [18, 18], [21, 21], [24, 24], [28, 28]],\r\n        [[0, 0], [3, 3], [6, 6], [9, 9], [12, 12], [18, 18], [21, 21], [24, 24], [28, 28]],\r\n        [[0, 0], [3, 6], [9, 18], [21, 24], [28, 28]],\r\n        [[0, 0], [6, 6], [9, 9], [15, 15], [24, 24], [28, 28]],\r\n        [[0, 0], [6, 6], [9, 9], [15, 15], [24, 24], [28, 28]],\r\n        [[0, 0], [3, 28]],\r\n        [[0, 0], [3, 3], [9, 9], [15, 15], [21, 21], [24, 24], [28, 28]],\r\n        [[0, 0], [3, 3], [9, 9], [15, 15], [21, 21], [24, 24], [28, 28]],\r\n        [[0, 0], [3, 6], [9, 9], [15, 15], [21, 21], [24, 24], [28, 28]],\r\n        [[0, 0], [3, 3], [6, 6], [9, 9], [15, 15], [21, 21], [24, 24], [28, 28]],\r\n        [[0, 3], [6, 9], [15, 15], [21, 28]]\r\n    ]\r\n];","import { PLAYER_SPEED } from '../constantsGame';\r\nimport paths from './paths';\r\n\r\n// Asigna la orientación del movimiento del jugador\r\nexport function setPolarity(direction) {\r\n    const coord1 = (direction < 2) >> 0;\r\n    const coord2 = (-1) ** (1 - coord1);\r\n    const coord3 = direction % 2;\r\n\r\n    return { coord1, coord2, coord3 };\r\n}\r\n\r\n// Cambia la dirección del movimiento del jugador\r\nexport function changeDirection(state, { direction }) {\r\n    const oldPolarity = setPolarity(state.player.direction);\r\n    const newPolarity = setPolarity(direction);\r\n\r\n    if (oldPolarity.coord3 === newPolarity.coord3) {\r\n        return {\r\n            ...state,\r\n            player: {\r\n                ...state.player,\r\n                direction,\r\n                nextDirection: direction\r\n            }\r\n        };\r\n    }\r\n\r\n    return {\r\n        ...state,\r\n        player: {\r\n            ...state.player,\r\n            nextDirection: direction\r\n        }\r\n    };\r\n}\r\n\r\n// Actualiza el estado del movimiento del jugador\r\nexport function walking(state, { time = Date.now() } = {}) {\r\n\r\n    const timeSeconds = (time - state.walkingTime) / 1000;\r\n\r\n    if (state.lost) {\r\n        return state;\r\n    }\r\n\r\n    const playerWalking = updatePlayer({ ...state, walkingTime: time }, timeSeconds);\r\n\r\n    return playerWalking;\r\n}\r\n\r\n// Cambia el estado del juego; el vector de movimiento del jugador y el estado de las pastillas en el tablero\r\nexport function updatePlayer(state, time) {\r\n    const newVector = getNewPlayerVector(state.player, time);\r\n    const eatentabsIndex = getEatentabs(state.tabs, state.player, newVector.position);\r\n    const tabs = state.tabs.slice();\r\n    let scoreDelta = 0;\r\n    if (eatentabsIndex > -1) {\r\n        tabs[eatentabsIndex].eaten = true;\r\n\r\n        scoreDelta = 1 + (tabs[eatentabsIndex].big >> 2);\r\n    }\r\n\r\n    const nextState = {\r\n        ...state,\r\n        score: state.score + scoreDelta,\r\n        player: {\r\n            ...state.player,\r\n            ...newVector\r\n        },\r\n        tabs\r\n    };\r\n\r\n    return nextState;\r\n}\r\n\r\n// Retorna las pastillas que el jugador se ha comido\r\nfunction getEatentabs(tabs, player, newPosition) {\r\n    const { coord3, coord2 } = setPolarity(player.direction);\r\n\r\n    return tabs.findIndex(({ position, eaten }) => !eaten &&\r\n        position[1 - coord3] === player.position[1 - coord3] &&\r\n        coord2 * position[coord3] >= coord2 * player.position[coord3] &&\r\n        coord2 * position[coord3] <= coord2 * newPosition[coord3]\r\n    );\r\n}\r\n\r\nfunction getNewPlayerVector(player, time) {\r\n    const { newPosition, movedDistance } = getNewPosition(player.position, player.direction,\r\n            PLAYER_SPEED, time);\r\n\r\n    if (player.nextDirection !== player.direction) {\r\n        const changedVector = getChangedVector(player.position, newPosition,\r\n            player.direction, player.nextDirection, movedDistance);\r\n\r\n        if (changedVector) {\r\n            return { position: changedVector, direction: player.nextDirection };\r\n        }\r\n    }\r\n\r\n    return { position: newPosition };\r\n}\r\n\r\n// Cambia la posición del jugador teniendo en cuenta los muros en el tablero\r\nexport function getNewPosition(position, direction, speed, time, toNearestCoord3 = true) {\r\n    const { coord1, coord3, coord2 } = setPolarity(direction);\r\n\r\n    const newPosition = position.slice();\r\n    const movedVector = coord2 * speed * time;\r\n    let movedDistance = Math.abs(movedVector);\r\n\r\n    const nearestOtherCoord3 = Math.round(newPosition[1 - coord3]);\r\n    if (toNearestCoord3) {\r\n        newPosition[1 - coord3] = nearestOtherCoord3;\r\n    }\r\n\r\n    newPosition[coord3] += movedVector;\r\n\r\n    const path = paths[coord3][nearestOtherCoord3];\r\n\r\n    const pathHit = path.findIndex(limits =>\r\n        position[coord3] >= limits[0] &&\r\n        position[coord3] <= limits[1] &&\r\n        coord2 * newPosition[coord3] > coord2 * limits[coord1]\r\n    );\r\n\r\n    let collision = false;\r\n\r\n    if (pathHit === (path.length - 1) * coord1 && path[pathHit][2]) {\r\n        // wrap\r\n        newPosition[coord3] = path[(path.length - 1) * (1 - coord1)][1 - coord1];\r\n\r\n        movedDistance = speed * time;\r\n    }\r\n    else if (pathHit > -1) {\r\n        newPosition[coord3] = path[pathHit][coord1];\r\n\r\n        movedDistance = Math.abs(position[coord3] - path[pathHit][coord1]);\r\n\r\n        collision = true;\r\n    }\r\n    return { newPosition, collision, movedDistance };\r\n}\r\n\r\n\r\nexport function continueMoving(coord3, coord1, position, tolerance) {\r\n    const snap = coord1 ? Math.ceil(position[coord3]) : Math.floor(position[coord3]);\r\n\r\n    if (Math.abs(snap - position[coord3]) > tolerance) {\r\n        return -1;\r\n    }\r\n\r\n    return snap;\r\n}\r\n\r\nexport function getChangedVector(oldPosition, newPosition, oldDirection, newDirection, movedDistance) {\r\n    const { coord3: oldCoord3, coord1: oldCoord1 } = setPolarity(oldDirection);\r\n\r\n    const pathTo = continueMoving(oldCoord3, oldCoord1, newPosition, movedDistance);\r\n    if (pathTo === -1) {\r\n        return null;\r\n    }\r\n\r\n    const old0 = oldPosition[oldCoord3];\r\n    const new0 = newPosition[oldCoord3];\r\n\r\n    const movedDistanceBeforeTurn = Math.abs(pathTo - newPosition[oldCoord3]);\r\n\r\n    if (!(old0 === new0 && movedDistanceBeforeTurn > movedDistance)) {\r\n        const { coord1: newCoord1, coord3: newCoord3, coord2 } = setPolarity(newDirection);\r\n\r\n        const path = paths[newCoord3][pathTo];\r\n        if (!path) {\r\n            return null;\r\n        }\r\n\r\n        const pathHit = path.findIndex(limits =>\r\n            newPosition[newCoord3] >= limits[0] &&\r\n            newPosition[newCoord3] <= limits[1] &&\r\n            (1 - newCoord1) * newPosition[newCoord3] >= (limits[0] - coord2) * (1 - newCoord1) &&\r\n            newCoord1 * newPosition[newCoord3] <= (limits[1] - coord2) * newCoord1\r\n        );\r\n\r\n        if (pathHit > -1) {\r\n            const changedVector = newPosition.slice();\r\n\r\n            changedVector[oldCoord3] = pathTo;\r\n            changedVector[newCoord3] += coord2 * (movedDistance - movedDistanceBeforeTurn);\r\n\r\n            return changedVector;\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { EAST, NORTH, WEST, SOUTH } from './constantsGame';\r\nimport Board from './Board';\r\nimport Tabs from './Tabs';\r\nimport Pacman from './Player/Pacman';\r\nimport { walking, changeDirection } from './Player/moves';\r\nimport './style.scss';\r\n\r\nexport default class Lacman extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleKeyDown = this.handleKeyDown.bind(this) //Manejador de eventos\r\n        \r\n        this.state = {\r\n            walkingTime: Date.now(),\r\n            score: 0,\r\n            player: {\r\n                position: [12.5, 15],\r\n                direction: EAST,\r\n                nextDirection: EAST\r\n            },\r\n            lost: false,\r\n        tabs: this.generateTabs()\r\n        };\r\n\r\n        this.timers = {\r\n            start: null,\r\n            walking: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyDown);\r\n\r\n        this.timers.start = setTimeout(() => {\r\n            this.setState({ walkingTime: Date.now() });\r\n            this.walkingInMap();\r\n        }, 3000);\r\n    }\r\n\r\n    isBigTab([posX, posY]) {\r\n        return (posX === 0 || posX === 25) && (posY === 7 || posY === 26);\r\n    }\r\n    \r\n    generateTabs() {\r\n        const putRow = (startX, posY, num) => new Array(num).fill(0)\r\n            .map((item, index) => ([startX + index, posY]));\r\n\r\n        const putSeparateTabsInRow = (xPoints, posY) => xPoints\r\n            .map(posX => ([posX, posY]));\r\n    \r\n        const putContinuousTabsInRow = (ranges, posY) => ranges\r\n            .reduce((items, [startX, num]) => ([\r\n                ...items, ...putRow(startX, posY, num)\r\n            ]), []);\r\n\r\n        const putCol = (posX, startY, num) => new Array(num).fill(0)\r\n            .map((item, index) => ([posX, startY + index]));\r\n        \r\n        const tabsGroup = [\r\n            ...putRow(0, 0, 26),\r\n            ...putSeparateTabsInRow([0, 11, 14, 25], 1),\r\n            ...putSeparateTabsInRow([0, 11, 14, 25], 2),\r\n            ...putContinuousTabsInRow([[0, 6], [8, 4], [14, 4], [20, 6]], 3),\r\n            ...putSeparateTabsInRow([2, 5, 8, 17, 20, 23], 4),\r\n            ...putSeparateTabsInRow([2, 5, 8, 17, 20, 23], 5),\r\n            ...putContinuousTabsInRow([[0, 3], [5, 7], [14, 7], [23, 3]], 6),\r\n            ...putSeparateTabsInRow([0, 5, 11, 14, 20, 25], 7),\r\n            ...putSeparateTabsInRow([0, 5, 11, 14, 20, 25], 8),\r\n            ...putContinuousTabsInRow([[0, 12], [14, 12]], 9),\r\n            ...putCol(5, 10, 11),\r\n            ...putCol(20, 10, 11),\r\n            ...putContinuousTabsInRow([[0, 6], [8, 4], [14, 4], [20, 6]], 21),\r\n            ...putSeparateTabsInRow([0, 5, 8, 17, 20, 25], 22),\r\n            ...putSeparateTabsInRow([0, 5, 8, 17, 20, 25], 23),\r\n            ...putRow(0, 24, 26),\r\n            ...putSeparateTabsInRow([0, 5, 11, 14, 20, 25], 25),\r\n            ...putSeparateTabsInRow([0, 5, 11, 14, 20, 25], 26),\r\n            ...putSeparateTabsInRow([0, 5, 11, 14, 20, 25], 27),\r\n            ...putContinuousTabsInRow([[0, 12], [14, 12]], 28)\r\n            ]\r\n\r\n        return (\r\n            tabsGroup.map((position, index) => ({\r\n                key: index,\r\n                position,\r\n                eaten: false,\r\n                big: this.isBigTab(position)\r\n            }))\r\n        );\r\n    }\r\n\r\n    handleKeyDown (event){\r\n        if (event.key === 'ArrowRight') {\r\n            return this.changeDirection(EAST);\r\n        }\r\n        if (event.key === 'ArrowUp') {\r\n            return this.changeDirection(NORTH);\r\n        }\r\n        if (event.key === 'ArrowLeft') {\r\n            return this.changeDirection(WEST);\r\n        }\r\n        if (event.key === 'ArrowDown') {\r\n            return this.changeDirection(SOUTH);\r\n        }\r\n        \r\n        return null;\r\n    };\r\n\r\n    changeDirection(direction) {\r\n        this.setState(changeDirection(this.state, { direction }));\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyDown);\r\n        clearTimeout(this.timers.start);\r\n        clearTimeout(this.timers.walking);\r\n    }\r\n\r\n    walkingInMap() {\r\n        const move = walking(this.state);\r\n        this.setState(move);\r\n        \r\n        clearTimeout(this.timers.walking);\r\n        this.timers.walking = setTimeout(() => this.walkingInMap(), 20);\r\n    }\r\n\r\n    render() {\r\n        const { onEnd, ...otherProps } = this.props;\r\n        const props = { gridSize: 12, ...otherProps };\r\n        return (\r\n            <div className=\"lacman\">\r\n                <Board {...props} />\r\n                <Tabs {...props} tabs={this.state.tabs} />\r\n                <Pacman {...props} {...this.state.player} lost={this.state.lost} onEnd={onEnd} />\r\n                <div className=\"lacman-score\">\r\n                    <span className=\"running-score\">{'Score: '}{this.state.score}</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLacman.propTypes = {\r\n    gridSize: PropTypes.number.isRequired,\r\n    onEnd: PropTypes.func\r\n};","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport ComponentsGame from './ComponentsGame';\r\n\r\nconst props = {\r\n    gridSize: 18,\r\n    animate: process.env.NODE_ENV !== 'development'\r\n};\r\n\r\nfunction renderApp(LacmanApp = ComponentsGame) {\r\n    render(\r\n        <LacmanApp {...props} />,\r\n        document.getElementById('root')\r\n    );\r\n}\r\n\r\nrenderApp();\r\n\r\nif (module.hot) {\r\n    // eslint-disable-next-line global-require\r\n    module.hot.accept('./ComponentsGame', () => renderApp(require('./ComponentsGame').default));\r\n}"],"sourceRoot":""}